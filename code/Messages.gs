var messages = {

  provideBitlyToken() {
    return "Provide Bitly Token:";
  },

  provideBitlyGuid() {
    return "Provide Bitly GUID:";
  },

  cannotFindGroupInVolunteerSheet(groupName, week, volunteer) {
    return "Cannot find group: " + groupName + "\n" +
     ", week: " + week + "\n" +
     " in the secondary volunteer sheet: " + volunteer + "\n" +
     "Please make a screenshot of this message and inform your coordinator.";
  },
  
  cannotFindGroupInSchedule(groupName, week) {
    return "Cannot find group: " + groupName + 
     ", week: " + week + " in Schedule.\n" +
     "Please make a screenshot of this message and inform your coordinator.";
  },
  
  creatingBitlinkShouldBeUsedOnlyInVolunteerSheets() {
    return "Bitlink creation should be used only in one of the volunteer sheets.";
  },
  
  creatingBitlinkShouldBeUsedOnlyByPrimaryAndOnContentUrl() {
    return "Bitlink creation should be used only by the primary volunteer and only when the active cell is set on a link in the \'Content URL\' column."
  },

  reviewReplaceGroup(groupName, weeks, newGroupName, newGroupUrl, newAdPolicy) {
    return "The group: " + groupName + " will be replaced in weeks: " + weeks + " for the group: " + newGroupName + ", url: " + newGroupUrl + ", allowAds: " + newAdPolicy;
  },

  reviewMarkGroup(groupName, week) {
    return "Should the group: " + 
      groupName + "really be marked from week: " + 
      week + " until the last week?";
  },
  
  areYouSureGenerateSchedule() {
    return "Generate Schedule will delete, reset and regenerate the whole document. " +
      "All sheets will be deleted and created again, all project settings will be erased and new information has be to provided. " + 
      "This will also delete all the data from the Volunteers tabs.\n\n" +
      "Are you sure you want to continue?";
  },

  areYouReallySureGenerateSchedule() {
    return "Your email is not included in the administrator document.\n" + 
      "Are you really sure you want to reset the whole document and create a new one in its place?";
  },

  reviewGenerateSchedule(startingWeek, noWeeksToGenerate, batchSize, ieoAdFrequency, weeksInWhichNoAdsAppear) {
    return "Please review the provided values:\n" +
      " - Starting week: " + startingWeek + "\n" +
      " - Weeks to generate: " + noWeeksToGenerate + "\n" +
      "\n" +                                           
      " - Batch size: " + batchSize + "\n" + 
      " - IEO Ad frequency : " + ieoAdFrequency + "\n" +
      " - Weeks to which no ads appear: " + weeksInWhichNoAdsAppear + "\n" +
      "\n" +
      " - Volunteers: " + JSON.stringify(project.getVolunteerNames());
  },

  reviewReplaceVolunteer(oldName, oldEmail, newName, newEmail) {
    return "Please review the provided values: " + "\n" +
     "old name: " + oldName + "\n" +
     "old email: " + oldEmail + "\n" + 
     "new name: " + newName + "\n" +
     "new email: " + newEmail;
  },

  reviewReplaceCoordinator(oldEmail, newEmail) {
    return "Please review the provided values: " + "\n" +
     "old email: " + oldEmail + "\n" + 
     "new email: " + newEmail;
  },
  
  incorrectInput() {
    return "This is an incorrect input value. Please try again.";
  },
  
  onlySecondaryEditsDateCommented() {
    return "For this group it is the secondary volunteer who should comments on the post, and this is the primary volunteer sheet.";
  },
  
  onlyPrimaryEditsLinkToFbPost() {
    return "For this group it is the primary volunteer who should write the post, and this is the secondary volunteer sheet.";
  },
  
  bitlinkShouldBeGeneratedNotInserted() {
    return "The bitlink should be generated with the help of Isha Tools > Create Bitlink and not inserted manually.\n\n" +
      "In case your bitlink has disappeared, you can safely generate it again using the function in Isha Tools.";
  },
  
  bitlinkShouldBeGeneratedByPrimary() {
    return "For this group the bitlink should be generated by the primary volunteer, and this is the secondary volunteer sheet."
  },

  cannotFindGroupWhenMarking(groupName, week) {
    return "Cannot find the group: " + groupName + " in week: " + week + ".\n" + 
      "No groups have been marked. Please try again.";
  },
  
  valueHasToBeANumber() {
    return "The provided value is not a number. Please try again.";
  },

  scheduleGenerationCanceled() {
    return "Schedule generation canceled.";
  },

  functionNotAvailable() {
    return "This function is not available yet. It will be added shortly.";
  },

  utmCampaignToSet() {
    return "The UTM Campaign to be set (for the Bitly creation):";
  },

  weekToStartTheGenerationFrom() {
    return "Week to start the generation from (default = 1, 8):";
  },

  numberOfWeeksToGenerate() {
    return  "Number of weeks to generate (default = 7, 14):";
  },

  nameOfTheGroupToBeMarked() {
    return "Name of the group to be marked:";
  },

  weekToMarkTheGroupFrom() {
    return "Week from which the group should be marked, f.e.: 2 (this will replace the group staring from week 2, until the last week):";
  },

  emailOfVolunteer(name) {
    return "Email of the volunteer: " + name + ":";
  },

  nameOfOldVolunteer() {
    return "Name of the volunteer who should be removed:";
  },

  emailOfOldVolunteer() {
    return "Email of the volunteer who should be removed:";
  },

  nameOfNewVolunteer() {
    return "Name of the volunteer who should be added:";
  },

  emailOfNewVolunteer() {
    return "Email of the volunteer who should be added:";
  },

  emailOfCoordinator() {
    return "Email of the coordinator:";
  },

  nameOfOldCoordinator() {
    return "Name of the coordinator who should be removed:";
  },

  nameOfNewCoordinator() {
    return "Name of the coordinator who should be added:";
  },

  emailOfOldCoordinator() {
    return "Email of the coordinator who should be removed:";
  },

  emailOfNewCoordinator() {
    return "Email of the coordinator who should be added:";
  },

  nameOfGroupToBeReplaced() {
    return "Name of the group to be replaced:";
  },

  weekToReplaceTheGroupFrom() {
    return "Week from which the group should be replaced, f.e.: 2 (this will replace the group staring from week 2, until the last week):";
  },

  nameOfNewGroup() {
    return "Name of the new group:"
  },

  urlOfNewGroup() {
    return "URL of the new group:";
  },

  doesNewGroupAllowAds() {
    return "Does the new group allow ads?";
  },

  sizeOfNewGroup() {
    return "What is the size of the new group?"
  },

  newPostsInLast30Days() {
    return "How many posts were there in the new group in the last 30 days?";
  },

  doesDocumentHaveCoordintor() {
    return "Does the document have a coordinator?";
  },

  operationCanceled() {
    return "Operation canceled.";
  },

  youAreNotAllowedToPerformThisOperation() {
    return "Unfortunatelly you are not allowed to perform this operation. Please ask your coordinator to perform this operation instead."
  },

  contactTheAdministratorToPerformThisAction() {
    return "Please ask the document administrator to perform this action.\n" +
      "Contact on WhatsApp: +48 537 035 551. Contact on Email: vikbobinski@gmail.com."
  }
}
